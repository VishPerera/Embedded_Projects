/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "memory_mapped.h"

int main(void)
{
	// --- Defining Register Addresses ---
	RCC_AHB1EN_R_t volatile *const pClkCtrl_Reg     = (RCC_AHB1EN_R_t*)  0x40023830;
	GPIOx_MODE_R_t volatile *const pPortB_Mode_Reg  = (GPIOx_MODE_R_t*)  0x40020400;
	GPIOx_OD_R_t   volatile *const pPortB_Out_Reg   = (GPIOx_OD_R_t*)    0x40020414;

	//1. enable the clock for GPOIB peripheral in the AHB1ENR (SET bit 1 position)
	pClkCtrl_Reg -> gpiob_en = 1;

	//2. configure the mode of the IO pin as output
	pPortB_Mode_Reg -> pin_0 = 1;

	while(1)
	{
		// 3. Set bit 0 to high to turn on PB0 Green LED
		pPortB_Out_Reg -> pin_0  = 1;

		// Add a small software delay. Loop for 300k times
		for(uint32_t i=0 ; i < 300000 ; i++ );

		// 4. Clear bit 0 to high to turn off PB0 Green LED
		pPortB_Out_Reg -> pin_0  = 0;

		for(uint32_t i=0 ; i < 300000 ; i++ );
	}

	for(;;); // Hangs the program
}
